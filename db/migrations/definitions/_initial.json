{"schemas":"DEFINE TABLE script_migration SCHEMAFULL;\n\nDEFINE FIELD script_name ON script_migration TYPE string;\nDEFINE FIELD executed_at ON script_migration TYPE datetime VALUE $before OR time::now();\nDEFINE TABLE user SCHEMAFULL\n    PERMISSIONS\n    FOR select FULL\n    FOR update WHERE id = $auth.id\n    FOR create, delete NONE;\n\nDEFINE FIELD name ON user TYPE string ASSERT $value != NONE;\nDEFINE FIELD email ON user TYPE string ASSERT is::email($value);\nDEFINE FIELD password ON user TYPE string ASSERT $value != NONE;\nDEFINE FIELD registeredAt ON user TYPE datetime VALUE $before OR time::now();\nDEFINE FIELD updatedAt ON user TYPE datetime VALUE $before OR time::now();\nDEFINE FIELD avatar ON user TYPE string;\n\nDEFINE FIELD permissions ON user TYPE array VALUE [permission:createInvoice];\nDEFINE FIELD permissions.* ON user TYPE record(permission);\n\nDEFINE INDEX uniqueEmail ON user COLUMNS email UNIQUE;\n\nDEFINE SCOPE user\n    SESSION 24h\n    SIGNUP (\n        CREATE user\n        SET\n            name = $name,\n            email = $email,\n            avatar = \"https://www.gravatar.com/avatar/\" + crypto::md5($email),\n            password = crypto::argon2::generate($password)\n    )\n    SIGNIN (\n        SELECT *\n        FROM user\n        WHERE email = $email AND crypto::argon2::compare(password, $password)\n    );\n\nDEFINE SCOPE user SESSION 1d\n    SIGNIN (\n        SELECT * FROM user WHERE email = $email AND crypto::argon2::compare(password, $password)\n    )\n    SIGNUP (\n        CREATE user CONTENT {\n            name: $name,\n            email: $email,\n            password: crypto::argon2::generate($password)\n        }\n    );\nDEFINE SCOPE userScope SESSION 1d\n\tSIGNIN (\n\t\tSELECT * FROM user WHERE email = $email AND crypto::argon2::compare(password, $password)\n\t)\n\tSIGNUP (\n\t\tCREATE user CONTENT {\n\t\t\tname: $name,\n\t\t\temail: $email,\n\t\t\tpassword: crypto::argon2::generate($password)\n\t\t}\n\t);","events":""}